---
# see
# Documents/tech/hardware-and-software/sphinx/ansible-centos-rpi/filter/subelements.rst
# run 
#  ansible-playbook filter-dict2items.yml
#
- name: treat each dictionary key/value pair as an item in a list. Three keys makes three arrays.
  hosts: localhost
  gather_facts: no
  vars:
    
    osp_servers:
      frontend:
        name: frontend
        state: present
        image: rhel-guest
        key_name: ansible_ssh
        flavor: m1.medium
        security_group: frontend
        meta:
          - { group: frontends, deployment_name: QA}
      app1:
        name: app1
        state: present
        image: rhel-guest
        key_name: ansible_ssh
        flavor: m1.medium
        security_group: apps
        meta:
          - { group: apps, deployment_name: QA}
      app2:
        name: app2
        state: present
        image: rhel-guest
        key_name: ansible_ssh
        flavor: m1.medium
        security_group: apps
        meta:
          - { group: apps, deployment_name: QA}
      db:
        name: db
        state: present
        image: rhel-guest
        key_name: ansible_ssh
        flavor: m1.medium
        security_group: db
        meta:
          - { group: appdbs, deployment_name: QA}

  tasks:

    - name: "hash of hashes." 
      debug: 
        var: item
      loop: "{{ osp_servers | dict2items }}"

    # same thing but rename item to __instance 
    - name: "dict of dicts" 
      debug: 
        var: __instance
      loop: "{{ osp_servers | dict2items }}"
      loop_control:
        loop_var: __instance

    - name: "dict in list in dict" 
      debug: 
        msg: "group={{ item.value.meta[0].group }},deployment_name={{ item.value.meta[0].deployment_name }}"
      loop: "{{ osp_servers | dict2items }}"

