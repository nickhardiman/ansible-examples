---
# run 
#   ansible-playbook var-dict-to-list.yml 
#  
# rearrange dictionaries into lists
# The final task uses the json_query filter, which has a dependency.
# You need to install "jmespath" prior to running json_query filter
# "pip install jmespath" should do it.
# Use a python virtualenv just in case you get stuck with "pickle" errors.
# https://docs.ansible.com/ansible/latest/user_guide/playbooks_filters.html#selecting-json-data-json-queries
#
# https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html#dictionary-variables
#
#

- name: rearrange dictionaries into lists
  hosts: localhost 
  gather_facts: no
  become: no
  connection: local
  # define dictionary variables
  vars:
    dictionary_variable_1: 
      a_key: a value
      another_key: another value
      and_another_key: and another value
      'key with spaces': some value
    dictionary_variable_2: 
      d2_key_1: d2_value_1
      d2_key_2: d2_value_2
      d2_key_3: d2_value_3
    complicated_dictionary:
      cd_key_1:
         some_repeating_key: bla
         another_repeating_key: bla
      cd_key_2:
         some_repeating_key: bla
         another_repeating_key: bla
      cd_key_3:
         some_repeating_key: bla
         another_repeating_key: bla

  tasks:

  - name: display keys using the filter "list"
    debug: 
      msg: "value: {{ item }}"
    loop: "{{ dictionary_variable_1 | list }}"

  # This one creates keys "key" and "value". 
  - name: split the dictionary into a list of dictionaries using the filter "dict2items"
    debug: 
      msg: "value: {{ item }}"
    loop: "{{ dictionary_variable_1 | dict2items }}"

  - name: rearrange the dictionary into a list of dictionaries using the lookup "dict"
    debug: 
      msg: "value: {{ item }}"
    loop: "{{ lookup('dict', dictionary_variable_1) }}"

  - name: add the two dictionaries to a list using [] + []
    vars:
      list_of_dicts: "{{ [dictionary_variable_1] + [dictionary_variable_2] }}"
    debug: 
      msg: "value: {{ list_of_dicts }}"

  - name: list every value of "some_repeating_key" in the complicated dictionary
    vars:
      json_query_filter: "*.some_repeating_key"
    debug:
      msg: "value: {{ item }}"
    loop: "{{ complicated_dictionary|json_query(json_query_filter)|list }}"

