---
# regex_replace
#
# run
#   ansible-playbook -i inventory-localhost.yml filter-regex_replace.yml
#
# The regex_replace filter replaces parts of a string.
# It's useful for changing "one_two_three" to "one, two, three".
#
# The regex_search filter is a simpler way of returning a substring from a bigger string.
# Despite the name, regex_search returns the matched string.
# It's useful for taking "one_two_three" and returning "two".
#
# These files have many regular expression filter examples. 
#
# * filter-match.yml
# * filter-regex_findall.yml
# * filter-regex_findall-using-subtasks.yml
# * filter-regex_replace.yml
# * filter-regex_search.yml
#
- name: regex_replace filter
  hosts: localhost
  gather_facts: no
  vars:
  - long_name: one_two_three_four_five_six_seven_eight_nine_ten
  - myhosts:
    - host1
    - host2
    - host3
  tasks:

  # these take foobar and give bar

  - name: take foobar and give bar by naming characters to match and none to replace them with.
    debug:
      msg: "{{ 'foobar' | regex_replace('foo') }}"

  #- name: doesn't work, displays foobar
  #  debug:
  #    msg: "{{ 'foobar' | regex_replace('(bar)', '\\1') }}"

  - name: same thing with brackets and matchref
    debug:
      msg: "{{ 'foobar' | regex_replace('foo(bar)', '\\1') }}"

  - name: with matchref, anchors and wildcards
    debug:
      msg: "{{ 'foobar' | regex_replace('^f.*o(.*)$', '\\1') }}"

  # long_name

  - name: from "one_two_three_four_..." to "two_three_four_..."
    debug:
      msg: "{{ long_name | regex_replace('[^_]+_(.*)', '\\1') }} "

  - name: from "one_two_three_four_..." to "two"
    debug:
      msg: "{{ long_name | regex_replace('[^_]+_([^_]+).*', '\\1') }} "


  # change text

  - name: from "one_two_three_four_... to "one, two, three, four, ...
    debug:
      msg: "{{ long_name | regex_replace('_', ', ') }}"

  - name: convert "localhost:80" to "lOcalhOst:80"
    debug:
      msg: "{{ 'localhost:80' | regex_replace('o', 'O') }}"

  - name: regex named groups, convert "localhost:80" to "localhost, 80"
    debug:
      msg: "{{ 'localhost:80' | regex_replace('^(?P<host>.+):(?P<port>\\d+)$', '\\g<host>, \\g<port>') }}"

  # add text

  - name: add "https://" prefix to each item in a list
    debug:
      msg: "{{ myhosts | map('regex_replace', '^(.*)$', 'https://\\1/') | list }}"

  - name: replace an empty string with characters
    vars:
      I_am_empty: ''
    debug:
      msg: "{{ I_am_empty | regex_replace ('^$', 'boo!') }}"



